shell
=====
shell provides two user facing functions that execute shell commands and
return results in a normalized manner. /usr/bin/timeout is required.

command() returns a namedtuple and multi_command() returns a namedtuple
generator:

result.command  <str> command string
result.retval   <int> retval
result.output   <list> output split by line, stripped of vertical and
                       horizontal whitespace

retval = 124 on execution timeout
retval = 127 if command not found or executable
retval = 255 if /usr/bin/timeout not found or executable
retval = 256 on exepction during execution
retval = 257 on execption during output collection

On retval 256 and 257, output will be format_exc(). On retval 124, 127 or
255 a standard description is returned.

command(str command, int timeout=10)
====================================
Executes a command with a timeout. Returns the result as a namedtuple.

result = command('whoami', 2)
print result.command
print result.retval
print result.output

multi_command(list commands, int timeout=10, int workers=4)
===========================================================
Executes commands concurrently with individual timeouts in a pool of
workers. Returns ordered results as a namedtuple generator.

results = multi_command(['whoami', 'uptime'], 2)
for result in results:
  print result.command
  print result.retval
  print result.output